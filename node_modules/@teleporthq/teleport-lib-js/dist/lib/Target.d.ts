import Generator from './Generator';
import ElementsLibraryTargetMapping from './ElementsLibraryTargetMapping';
import { Mapping } from '../types';
export default class Target {
    name: string;
    /**
     * all mappings defined for this target
     */
    mappings: {
        [key: string]: ElementsLibraryTargetMapping;
    };
    /**
     * all mappings indexed by their elements library defined for this target
     */
    mappingsByLibrary: {
        [key: string]: ElementsLibraryTargetMapping;
    };
    private targetGenerator;
    constructor(name: string);
    /**
     * sets up a mapping to be used within this target
     * @param mapping the mapping to be used
     */
    useMapping(mapping: ElementsLibraryTargetMapping): void;
    setGenerator(generator: Generator): void;
    /**
     * retrieves a mapping by it's name
     * @param mappingName
     */
    mapping(mappingName: string): ElementsLibraryTargetMapping | undefined;
    /**
     * returns the mapping equivalent to an elements library
     * @param libraryName
     */
    mapLibrary(libraryName: string): ElementsLibraryTargetMapping | null;
    /**
     * returns the mapping of an element within the current target
     * @param source source element library
     * @param type name if the element
     */
    map(source: string, type: string): Mapping | null;
    readonly generator: Generator;
}
